def parseRequest(req):
    request = None
    try:
        splitreq = req.split('\n\n',1)
        firstline = splitreq[0].split('\n')[0]
        command = firstline.split(' ')[0]
        path =firstline.split(' ')[1]
        version = firstline.split(' ')[2]
        headers = {}
        body = None
        for header in splitreq[0].split('\n')[1:]:
            headers[header.split(':',1)[0]] = header.split(':',1)[1].strip()
        if len(splitreq[1].strip())!=0: #is there a request body?
            body = splitreq[1]
        request = {'command':command,'path':path,'version':version,'headers':headers,'body':body}
    except:
        request = None
    return request


def parseResponse(resp):
    response = None
    try:
        splitresp = resp.split('\n\n',1)
        firstline = splitresp[0].split('\n')[0]
        version = firstline.split(' ')[0]
        status =firstline.split(' ')[1]
        reason = firstline.split(' ')[2]
        headers = {}
        body = None
        for header in splitresp[0].split('\n')[1:]:
            headers[header.split(':',1)[0]] = header.split(':',1)[1].strip()
        if len(splitresp[1].strip())!=0: #is there a body?
            body = splitresp[1]
        response = {'version':version,'status':status,'reason':reason,'headers':headers,'body':body}
    except:
        response = None
    return response

logfile = open("blog").read()
if "======================================================" in logfile.split('\n')[0]: #hacky bit to move first line
    lf2 = '\n'.join(logfile.split('\n')[1:])
    logfile = lf2

pairsep = "======================================================\n\n\n\n======================================================\n"
pairs = []

for item in logfile.split(pairsep):
    hostinfo = item.split('\n')[0].split('  ')
    try:
        time = hostinfo[0]
    except:
        time = None
    try:
        protocol = hostinfo[1].rsplit(':',1)[0].split('://')[0]
    except:
        protocol = None
    try:
        hostname = hostinfo[1].rsplit(':',1)[0].split('://')[1]
    except:
        hostname = None
    try:
        port = hostinfo[1].rsplit(':',1)[1]
    except:
        port = None
    try:
        hostiptmp = hostinfo[2]
        hostip = hostiptmp[1:-1]
    except:
        hostip = None

    if "======================================================\nHTTP" in item:#is there a response?
        #there is a response
        req = item.split("======================================================\n")[1]
        resp = item.split("======================================================\n")[2]
    else:
        #there isn't a response
        req = item.split("======================================================\n")[1]
        resp = None

    pairs.append({'time':time,'protocol':protocol,'hostname':hostname,'port':port,'hostip':hostip,'request':parseRequest(req),'response':parseResponse(resp),'fullrequest':req,'fullresponse':resp})


#do your "business" here:

for pair in pairs:
    print pair['request']
